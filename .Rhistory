getwd()
getwd()
setwd("~/GitHub/ABM_carbon_accounting2/run")
# Runs all scenarios for sensitivity predicitons
rm(list = ls())
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE, foce = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE, force = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE, force = TRUE)
library(ABM)
abm(365)
# Load R functions
ff <- list.files('../R', full.names = TRUE)
for (i in ff) source(i)
# Get packages
abm_packages()
# Get input file names
ff <- list.files('../inputs/surface_resp_sim/', full.names = TRUE)
ff <- ff[grepl('xlsm', ff)]
output <- NULL
for (i in ff){
update_feed <- FALSE
storage_mode <- TRUE
years <- 3
dat <- i
Catch_errors <- function(x, y){
tryCatch(
#try to do this
{
out <- abm_farm(dat, storage_mode, update_feed, years)
},
#if an error occurs, tell me the error
error = function(e) {
message('An Error Occurred')
print(e)
}
)
}
out <- Catch_errors(x,y)
# temporary work around a bug.
# That is, if multiple sections are simulated
# The out does not contain excreta data.
if(is.null(out$norm)){
out <- out
} else{
out <- out$norm
}
if(length(out) == 2) out['call'] <- as.character(out['call'])
input_barn <- read_excel(i, sheet = 'in-barn', skip = 1, col_names = TRUE)
input_storage <- read_excel(i, sheet = 'out-of-barn', skip = 1, col_names = TRUE)
output1 <- c(list(input_barn = input_barn, input_storage = input_storage), out, out$excreta_dat, i)
# combine outputs
output <- c(output, output1)
xlsm <- gsub('../inputs/','', i)
xlsx <- gsub('xlsm','xlsx', xlsm)
save_file <- paste0('../outputs/result files/results_', xlsx)
write.xlsx(output1, save_file, append = TRUE, rowNames = TRUE)
}
library('ABM')
setwd("~/GitHub/ABM_carbon_accounting/run")
# Runs all scenarios for sensitivity predicitons
rm(list = ls())
# Load R functions
ff <- list.files('../R', full.names = TRUE)
for (i in ff) source(i)
library('ABM')
# Get packages
abm_packages()
# Get C++ function
sourceCpp('../src/CTM_cpp.cpp')
