# Runs all scenarios for sensitivity predicitons
rm(list = ls())
detach("package:ABM", unload = TRUE)
install.packages("Rcpp")
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE, force = TRUE)
remove.packages('ABM')
install.packages('ABM')
library(ABM)
# Load R functions
ff <- list.files('../R', full.names = TRUE) 
for (i in ff) source(i)


abm(365)
# Get packages
abm_packages()

# Get C++ function
#sourceCpp('../src/CTM_cpp.cpp')

# Get input file names
ff <- list.files('../inputs/surface_resp_sim/', full.names = TRUE)
ff <- ff[grepl('xlsm', ff)]

output <- NULL

for (i in ff){

  update_feed <- FALSE
  storage_mode <- TRUE
  years <- 3

  dat <- i
  
  Catch_errors <- function(x, y){
    tryCatch(
      #try to do this
      {
       out <- abm_farm(dat, storage_mode, update_feed, years)
      },
      #if an error occurs, tell me the error
      error = function(e) {
        message('An Error Occurred')
        print(e)
      }
    )
  }
    
 out <- Catch_errors(x,y)
 
 # temporary work around a bug. 
 # That is, if multiple sections are simulated 
 # The out does not contain excreta data.
 
 if(is.null(out$norm)){
   out <- out
 } else{
   out <- out$norm
 }
  
  if(length(out) == 2) out['call'] <- as.character(out['call'])
  
  input_barn <- read_excel(i, sheet = 'in-barn', skip = 1, col_names = TRUE)
  input_storage <- read_excel(i, sheet = 'out-of-barn', skip = 1, col_names = TRUE)
  
  output1 <- c(list(input_barn = input_barn, input_storage = input_storage), out, out$excreta_dat, i)
  
  # combine outputs
  output <- c(output, output1)

  xlsm <- gsub('../inputs/','', i) 
  xlsx <- gsub('xlsm','xlsx', xlsm)
  
  save_file <- paste0('../outputs/result files/results_', xlsx)
  
  write.xlsx(output1, save_file, append = TRUE, rowNames = TRUE)
}

emis <- NULL

for(i in seq(from = 3, by = length(output1), to = length(output))){
  emis1 <- data.frame(source = output[[i]]$source,
                      CH4 = output[[i]]$CH4_kg_anim_yr, 
                      CH4_A = output[[i]]$CH4_A_kg_anim_yr, 
                      NH3 = output[[i]]$NH3_kg_anim_yr,
                      N2O = output[[i]]$N2O_kg_anim_yr,
                      file = output[[i+4]],
                      animal = ifelse(grepl('pig', output[[i+4]]), 'pig', 'cattle'))
                
  emis <- rbind(emis, emis1)
}

emis

write.csv(emis, '../outputs/output_all.csv', row.names = F)

emis$file <- gsub('../inputs/climate/pig_','', emis$file)
emis$file <- gsub('../inputs/climate/cattle_','', emis$file)
emis$file <- gsub('.xlsm','', emis$file)
emis$file <- gsub('_', ' ', emis$file)

emis.mod.pig.ent <- emis %>% filter(animal == 'pig') %>% 
  mutate(file = reorder(file, desc(CH4))) %>% mutate(CO2e = CH4 * 27.3) %>% filter(source != 'farm')

library(ggplot2)

pig_p <- ggplot(emis.mod.pig.ent, aes(file, CH4, fill = source)) + geom_bar(stat = 'identity') +
  labs(y = expression('kg CH'[4]~'year'^{-1}~'Pig'^{-1}), x = '') + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), text = element_text(size = 16)) 

png('../outputs/result files/results_climate/fig_pig.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(pig_p)
dev.off()


