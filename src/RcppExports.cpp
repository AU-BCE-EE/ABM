// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Arrh_func_cpp
NumericVector Arrh_func_cpp(NumericVector A, NumericVector E, double R, double temp_K);
RcppExport SEXP _ABM_Arrh_func_cpp(SEXP ASEXP, SEXP ESEXP, SEXP RSEXP, SEXP temp_KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type E(ESEXP);
    Rcpp::traits::input_parameter< double >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type temp_K(temp_KSEXP);
    rcpp_result_gen = Rcpp::wrap(Arrh_func_cpp(A, E, R, temp_K));
    return rcpp_result_gen;
END_RCPP
}
// CTM_cpp
Rcpp::NumericVector CTM_cpp(Rcpp::NumericVector tt, Rcpp::NumericVector top, Rcpp::NumericVector tmin, Rcpp::NumericVector tmax, Rcpp::NumericVector yopt);
RcppExport SEXP _ABM_CTM_cpp(SEXP ttSEXP, SEXP topSEXP, SEXP tminSEXP, SEXP tmaxSEXP, SEXP yoptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type top(topSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type yopt(yoptSEXP);
    rcpp_result_gen = Rcpp::wrap(CTM_cpp(tt, top, tmin, tmax, yopt));
    return rcpp_result_gen;
END_RCPP
}
// combined_cpp
List combined_cpp(double g_NH4, bool pH_inhib_overrule, double pH, double pH_floor, double TAN, double VFA, double sulfide, double slurry_mass, NumericVector pH_LL, NumericVector pH_UL, NumericVector ki_NH3_min, NumericVector ki_NH3_max, NumericVector ki_NH4_min, NumericVector ki_NH4_max, NumericVector ki_HAC, NumericVector ki_H2S_slope, NumericVector ki_H2S_int, NumericVector ki_H2S_min, NumericVector IC50_low, double temp_K, double temp_C, double temp_standard, double area, double floor_area, double Cfat, double CPs, double CPf, double RFd, double starch, double VSd, bool resp, List kl, NumericVector qhat, NumericVector i_meth, NumericVector i_sr, NumericVector xa, NumericVector ks_coefficient, double scale_ks, double ks_SO4, double sulfate, double urea, double alpha_urea, double km_urea);
RcppExport SEXP _ABM_combined_cpp(SEXP g_NH4SEXP, SEXP pH_inhib_overruleSEXP, SEXP pHSEXP, SEXP pH_floorSEXP, SEXP TANSEXP, SEXP VFASEXP, SEXP sulfideSEXP, SEXP slurry_massSEXP, SEXP pH_LLSEXP, SEXP pH_ULSEXP, SEXP ki_NH3_minSEXP, SEXP ki_NH3_maxSEXP, SEXP ki_NH4_minSEXP, SEXP ki_NH4_maxSEXP, SEXP ki_HACSEXP, SEXP ki_H2S_slopeSEXP, SEXP ki_H2S_intSEXP, SEXP ki_H2S_minSEXP, SEXP IC50_lowSEXP, SEXP temp_KSEXP, SEXP temp_CSEXP, SEXP temp_standardSEXP, SEXP areaSEXP, SEXP floor_areaSEXP, SEXP CfatSEXP, SEXP CPsSEXP, SEXP CPfSEXP, SEXP RFdSEXP, SEXP starchSEXP, SEXP VSdSEXP, SEXP respSEXP, SEXP klSEXP, SEXP qhatSEXP, SEXP i_methSEXP, SEXP i_srSEXP, SEXP xaSEXP, SEXP ks_coefficientSEXP, SEXP scale_ksSEXP, SEXP ks_SO4SEXP, SEXP sulfateSEXP, SEXP ureaSEXP, SEXP alpha_ureaSEXP, SEXP km_ureaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g_NH4(g_NH4SEXP);
    Rcpp::traits::input_parameter< bool >::type pH_inhib_overrule(pH_inhib_overruleSEXP);
    Rcpp::traits::input_parameter< double >::type pH(pHSEXP);
    Rcpp::traits::input_parameter< double >::type pH_floor(pH_floorSEXP);
    Rcpp::traits::input_parameter< double >::type TAN(TANSEXP);
    Rcpp::traits::input_parameter< double >::type VFA(VFASEXP);
    Rcpp::traits::input_parameter< double >::type sulfide(sulfideSEXP);
    Rcpp::traits::input_parameter< double >::type slurry_mass(slurry_massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pH_LL(pH_LLSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pH_UL(pH_ULSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH3_min(ki_NH3_minSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH3_max(ki_NH3_maxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH4_min(ki_NH4_minSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH4_max(ki_NH4_maxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_HAC(ki_HACSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_H2S_slope(ki_H2S_slopeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_H2S_int(ki_H2S_intSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_H2S_min(ki_H2S_minSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IC50_low(IC50_lowSEXP);
    Rcpp::traits::input_parameter< double >::type temp_K(temp_KSEXP);
    Rcpp::traits::input_parameter< double >::type temp_C(temp_CSEXP);
    Rcpp::traits::input_parameter< double >::type temp_standard(temp_standardSEXP);
    Rcpp::traits::input_parameter< double >::type area(areaSEXP);
    Rcpp::traits::input_parameter< double >::type floor_area(floor_areaSEXP);
    Rcpp::traits::input_parameter< double >::type Cfat(CfatSEXP);
    Rcpp::traits::input_parameter< double >::type CPs(CPsSEXP);
    Rcpp::traits::input_parameter< double >::type CPf(CPfSEXP);
    Rcpp::traits::input_parameter< double >::type RFd(RFdSEXP);
    Rcpp::traits::input_parameter< double >::type starch(starchSEXP);
    Rcpp::traits::input_parameter< double >::type VSd(VSdSEXP);
    Rcpp::traits::input_parameter< bool >::type resp(respSEXP);
    Rcpp::traits::input_parameter< List >::type kl(klSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type qhat(qhatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i_meth(i_methSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i_sr(i_srSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ks_coefficient(ks_coefficientSEXP);
    Rcpp::traits::input_parameter< double >::type scale_ks(scale_ksSEXP);
    Rcpp::traits::input_parameter< double >::type ks_SO4(ks_SO4SEXP);
    Rcpp::traits::input_parameter< double >::type sulfate(sulfateSEXP);
    Rcpp::traits::input_parameter< double >::type urea(ureaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_urea(alpha_ureaSEXP);
    Rcpp::traits::input_parameter< double >::type km_urea(km_ureaSEXP);
    rcpp_result_gen = Rcpp::wrap(combined_cpp(g_NH4, pH_inhib_overrule, pH, pH_floor, TAN, VFA, sulfide, slurry_mass, pH_LL, pH_UL, ki_NH3_min, ki_NH3_max, ki_NH4_min, ki_NH4_max, ki_HAC, ki_H2S_slope, ki_H2S_int, ki_H2S_min, IC50_low, temp_K, temp_C, temp_standard, area, floor_area, Cfat, CPs, CPf, RFd, starch, VSd, resp, kl, qhat, i_meth, i_sr, xa, ks_coefficient, scale_ks, ks_SO4, sulfate, urea, alpha_urea, km_urea));
    return rcpp_result_gen;
END_RCPP
}
// inhib_cpp
List inhib_cpp(bool pH_inhib_overrule, double pH, double NH3_frac, double HAC_frac, double H2S_frac, double TAN, double VFA, double sulfide, double slurry_mass, NumericVector pH_LL, NumericVector pH_UL, NumericVector ki_NH3_min, NumericVector ki_NH3_max, NumericVector ki_NH4_min, NumericVector ki_NH4_max, NumericVector ki_HAC, NumericVector ki_H2S_slope, NumericVector ki_H2S_int, NumericVector ki_H2S_min, NumericVector IC50_low);
RcppExport SEXP _ABM_inhib_cpp(SEXP pH_inhib_overruleSEXP, SEXP pHSEXP, SEXP NH3_fracSEXP, SEXP HAC_fracSEXP, SEXP H2S_fracSEXP, SEXP TANSEXP, SEXP VFASEXP, SEXP sulfideSEXP, SEXP slurry_massSEXP, SEXP pH_LLSEXP, SEXP pH_ULSEXP, SEXP ki_NH3_minSEXP, SEXP ki_NH3_maxSEXP, SEXP ki_NH4_minSEXP, SEXP ki_NH4_maxSEXP, SEXP ki_HACSEXP, SEXP ki_H2S_slopeSEXP, SEXP ki_H2S_intSEXP, SEXP ki_H2S_minSEXP, SEXP IC50_lowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type pH_inhib_overrule(pH_inhib_overruleSEXP);
    Rcpp::traits::input_parameter< double >::type pH(pHSEXP);
    Rcpp::traits::input_parameter< double >::type NH3_frac(NH3_fracSEXP);
    Rcpp::traits::input_parameter< double >::type HAC_frac(HAC_fracSEXP);
    Rcpp::traits::input_parameter< double >::type H2S_frac(H2S_fracSEXP);
    Rcpp::traits::input_parameter< double >::type TAN(TANSEXP);
    Rcpp::traits::input_parameter< double >::type VFA(VFASEXP);
    Rcpp::traits::input_parameter< double >::type sulfide(sulfideSEXP);
    Rcpp::traits::input_parameter< double >::type slurry_mass(slurry_massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pH_LL(pH_LLSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pH_UL(pH_ULSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH3_min(ki_NH3_minSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH3_max(ki_NH3_maxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH4_min(ki_NH4_minSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_NH4_max(ki_NH4_maxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_HAC(ki_HACSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_H2S_slope(ki_H2S_slopeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_H2S_int(ki_H2S_intSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ki_H2S_min(ki_H2S_minSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IC50_low(IC50_lowSEXP);
    rcpp_result_gen = Rcpp::wrap(inhib_cpp(pH_inhib_overrule, pH, NH3_frac, HAC_frac, H2S_frac, TAN, VFA, sulfide, slurry_mass, pH_LL, pH_UL, ki_NH3_min, ki_NH3_max, ki_NH4_min, ki_NH4_max, ki_HAC, ki_H2S_slope, ki_H2S_int, ki_H2S_min, IC50_low));
    return rcpp_result_gen;
END_RCPP
}
// rut_rates_cpp
List rut_rates_cpp(double temp_K, double temp_C, double temp_standard, double slurry_mass, double area, double floor_area, double NH3_frac, double NH3_frac_floor, double TAN, double H2S_frac, double sulfide, double Cfat, double CPs, double CPf, double RFd, double starch, double VSd, bool resp, List kl, NumericVector qhat, NumericVector i_meth, NumericVector i_sr, NumericVector xa, double VFA, NumericVector ks_coefficient, double scale_ks, double ks_SO4, double sulfate, NumericVector cum_inhib, double urea, double alpha_urea, double km_urea);
RcppExport SEXP _ABM_rut_rates_cpp(SEXP temp_KSEXP, SEXP temp_CSEXP, SEXP temp_standardSEXP, SEXP slurry_massSEXP, SEXP areaSEXP, SEXP floor_areaSEXP, SEXP NH3_fracSEXP, SEXP NH3_frac_floorSEXP, SEXP TANSEXP, SEXP H2S_fracSEXP, SEXP sulfideSEXP, SEXP CfatSEXP, SEXP CPsSEXP, SEXP CPfSEXP, SEXP RFdSEXP, SEXP starchSEXP, SEXP VSdSEXP, SEXP respSEXP, SEXP klSEXP, SEXP qhatSEXP, SEXP i_methSEXP, SEXP i_srSEXP, SEXP xaSEXP, SEXP VFASEXP, SEXP ks_coefficientSEXP, SEXP scale_ksSEXP, SEXP ks_SO4SEXP, SEXP sulfateSEXP, SEXP cum_inhibSEXP, SEXP ureaSEXP, SEXP alpha_ureaSEXP, SEXP km_ureaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type temp_K(temp_KSEXP);
    Rcpp::traits::input_parameter< double >::type temp_C(temp_CSEXP);
    Rcpp::traits::input_parameter< double >::type temp_standard(temp_standardSEXP);
    Rcpp::traits::input_parameter< double >::type slurry_mass(slurry_massSEXP);
    Rcpp::traits::input_parameter< double >::type area(areaSEXP);
    Rcpp::traits::input_parameter< double >::type floor_area(floor_areaSEXP);
    Rcpp::traits::input_parameter< double >::type NH3_frac(NH3_fracSEXP);
    Rcpp::traits::input_parameter< double >::type NH3_frac_floor(NH3_frac_floorSEXP);
    Rcpp::traits::input_parameter< double >::type TAN(TANSEXP);
    Rcpp::traits::input_parameter< double >::type H2S_frac(H2S_fracSEXP);
    Rcpp::traits::input_parameter< double >::type sulfide(sulfideSEXP);
    Rcpp::traits::input_parameter< double >::type Cfat(CfatSEXP);
    Rcpp::traits::input_parameter< double >::type CPs(CPsSEXP);
    Rcpp::traits::input_parameter< double >::type CPf(CPfSEXP);
    Rcpp::traits::input_parameter< double >::type RFd(RFdSEXP);
    Rcpp::traits::input_parameter< double >::type starch(starchSEXP);
    Rcpp::traits::input_parameter< double >::type VSd(VSdSEXP);
    Rcpp::traits::input_parameter< bool >::type resp(respSEXP);
    Rcpp::traits::input_parameter< List >::type kl(klSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type qhat(qhatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i_meth(i_methSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i_sr(i_srSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< double >::type VFA(VFASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ks_coefficient(ks_coefficientSEXP);
    Rcpp::traits::input_parameter< double >::type scale_ks(scale_ksSEXP);
    Rcpp::traits::input_parameter< double >::type ks_SO4(ks_SO4SEXP);
    Rcpp::traits::input_parameter< double >::type sulfate(sulfateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cum_inhib(cum_inhibSEXP);
    Rcpp::traits::input_parameter< double >::type urea(ureaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_urea(alpha_ureaSEXP);
    Rcpp::traits::input_parameter< double >::type km_urea(km_ureaSEXP);
    rcpp_result_gen = Rcpp::wrap(rut_rates_cpp(temp_K, temp_C, temp_standard, slurry_mass, area, floor_area, NH3_frac, NH3_frac_floor, TAN, H2S_frac, sulfide, Cfat, CPs, CPf, RFd, starch, VSd, resp, kl, qhat, i_meth, i_sr, xa, VFA, ks_coefficient, scale_ks, ks_SO4, sulfate, cum_inhib, urea, alpha_urea, km_urea));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ABM_Arrh_func_cpp", (DL_FUNC) &_ABM_Arrh_func_cpp, 4},
    {"_ABM_CTM_cpp", (DL_FUNC) &_ABM_CTM_cpp, 5},
    {"_ABM_combined_cpp", (DL_FUNC) &_ABM_combined_cpp, 43},
    {"_ABM_inhib_cpp", (DL_FUNC) &_ABM_inhib_cpp, 20},
    {"_ABM_rut_rates_cpp", (DL_FUNC) &_ABM_rut_rates_cpp, 32},
    {NULL, NULL, 0}
};

RcppExport void R_init_ABM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
