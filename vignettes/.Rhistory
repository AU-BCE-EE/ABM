labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.0))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1.5))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 1.5, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = 'dodge', width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_wrap(gas~temp) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
custom_labels <- custom_labels <- c("Gas A", "Gas B", "Temperature X", "Temperature Y")
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_wrap(gas~temp, labeller = labeller(gas = as_labeller(custom_labels), temp = as_labeller(custom_labels))) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
install.packages("forcats").
install.packages("forcats")
library(forcats)
custom_labels <- custom_labels <- c("Gas A", "Gas B", "Temperature X", "Temperature Y")
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_wrap(gas~temp, labeller = labeller(gas = as_labeller(custom_labels), temp = as_labeller(custom_labels))) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
custom_labels_df <- data.frame(
gas = c("Gas A", "Gas B"),
temp = c("Temperature X", "Temperature Y")
)
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_wrap(gas~temp, labeller = labeller(gas = as_labeller(custom_labels), temp = as_labeller(custom_labels))) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
# Create a named list with custom labels for 'gas' and 'temp' variables
custom_labels <- list(gas = c("Gas A", "Gas B"), temp = c("Temperature X", "Temperature Y"))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_wrap(~ gas + temp, labeller = labeller(.rows = custom_labels)) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_wrap(~ gas + temp, labeller = labeller(custom_labels)) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(~ gas + temp, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
# Create a named list with custom labels for 'gas' and 'temp' variables
new.lab = as_labeller(c("10"= "10~degree~C", "15"= "15~degree~C", "20"= "20~degree~C", "25"= "25~degree~C"), label_parsed)
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(~ gas + temp, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
# Create a named list with custom labels for 'gas' and 'temp' variables
new.lab = as_labeller(c("10"= "10~degree~C", "n2"= "N[2]", "20"= "20~degree~C", "air"= "Air"), label_parsed)
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
plot_vfa <-
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1))
png('../figures/fig_vfa.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(plot_vfa)
dev.off()
svg('../figures/fig_vfa.svg',  width = 18/2.54, height = 18/2.54)
grid::grid.draw(plot_vfa)
dev.off()
pdf('../figures/fig_vfa.pdf',   width = 17/2.54, height = 12/2.54)
grid::grid.draw(plot_vfa)
dev.off()
plot_vfa <-
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1, size = 12), axis.text.y = element_text(size = 12))
png('../figures/fig_vfa.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(plot_vfa)
dev.off()
plot_vfa <-
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1, size = 12),
axis.text.y = element_text(size = 12), strip.text = element_text(size = 14))
png('../figures/fig_vfa.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(plot_vfa)
dev.off()
plot_vfa <-
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
strip.text = element_text(size = 14),
legend.text = element_text(size = 14))
png('../figures/fig_vfa.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(plot_vfa)
dev.off()
plot_vfa <-
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1, size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.text = element_text(size = 14))
png('../figures/fig_vfa.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(plot_vfa)
dev.off()
plot_vfa <-
ggplot(dat.plot.all, aes(x = vfa, y = mean, fill = group)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.25, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
strip.text = element_text(size = 14),
legend.text = element_text(size = 14),
axis.title.y = element_text(size = 14))
png('../figures/fig_vfa.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(plot_vfa)
dev.off()
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(marelac)
library(ReacTran)
library(readxl)
source('pde_fun.R')
dat <- read_excel('../data/O2_profiles_corr.xlsx')
optim_pars <- read.csv('../output/optim_pars.csv')
pars <- cbind(optim_pars, D = 2.2 * 10^-5, kH = 0.0013/1000*10^6)
input_dat <- dat %>% mutate(id = as.factor(id)) %>% filter(exclude == 0, depth < 1000)
plot_dat <- data.frame()
for(i in unique(input_dat$id)){
parms <- pars[pars$id == i,]
dat <- input_dat[input_dat$id == i,] %>% select(-manure, -exclude, -mV) %>% filter(umol > 0) %>%
mutate(r = parms$r, KO2 = parms$KO2, type = "data", flux = pars$D[pars$id == i] * max(abs(diff(umol/1000))/abs(diff(depth/10000))))
x <- max(dat$depth)
model1 <- cbind(pde_fun(parms = parms, x = x), id = i, type = "model", man_name = dat$man_name[1], time = dat$time[1], r = parms$r[1], KO2 = parms$KO2[1]) %>%
rename('umol' = 'O2')
plot_dat <- rbind(plot_dat, model1, dat)
}
fig_profiles <- ggplot(plot_dat, aes(umol, y = depth, group = id, col = time)) +
geom_path(data = subset(plot_dat, type == "data")) +  # Add points for "data" category
scale_y_continuous(trans = "reverse") +
scale_x_continuous(position = "top") +
labs(y = "Depth (µm)", x = expression("Oxygen concentration (µmol"~L^{-1}*")"),
col = "Days") +
facet_wrap(~man_name) +
scale_color_viridis(option = "D")  +
theme_bw()
library(viridis)
source('pde_fun.R')
dat <- read_excel('../data/O2_profiles_corr.xlsx')
optim_pars <- read.csv('../output/optim_pars.csv')
pars <- cbind(optim_pars, D = 2.2 * 10^-5, kH = 0.0013/1000*10^6)
input_dat <- dat %>% mutate(id = as.factor(id)) %>% filter(exclude == 0, depth < 1000)
plot_dat <- data.frame()
for(i in unique(input_dat$id)){
parms <- pars[pars$id == i,]
dat <- input_dat[input_dat$id == i,] %>% select(-manure, -exclude, -mV) %>% filter(umol > 0) %>%
mutate(r = parms$r, KO2 = parms$KO2, type = "data", flux = pars$D[pars$id == i] * max(abs(diff(umol/1000))/abs(diff(depth/10000))))
x <- max(dat$depth)
model1 <- cbind(pde_fun(parms = parms, x = x), id = i, type = "model", man_name = dat$man_name[1], time = dat$time[1], r = parms$r[1], KO2 = parms$KO2[1]) %>%
rename('umol' = 'O2')
plot_dat <- rbind(plot_dat, model1, dat)
}
fig_profiles <- ggplot(plot_dat, aes(umol, y = depth, group = id, col = time)) +
geom_path(data = subset(plot_dat, type == "data")) +  # Add points for "data" category
scale_y_continuous(trans = "reverse") +
scale_x_continuous(position = "top") +
labs(y = "Depth (µm)", x = expression("Oxygen concentration (µmol"~L^{-1}*")"),
col = "Days") +
facet_wrap(~man_name) +
scale_color_viridis(option = "D")  +
theme_bw()
png('../figures/fig_profiles.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(fig_profiles)
dev.off()
svg('../figures/fig_profiles.svg',  width = 18/2.54, height = 18/2.54)
grid::grid.draw(fig_profiles)
dev.off()
pdf('../figures/fig_profiles.pdf',   width = 17/2.54, height = 12/2.54)
grid::grid.draw(fig_profiles)
dev.off()
flux_stat <- plot_dat %>% group_by(type, id) %>%
summarise(Vmax = mean(r), KO2 = mean(KO2), time = mean(time), slurry = man_name[1], flux_g_O2_m2_day = mean(flux) * 3600*24*10^-6*32*10000, flux_g_CO2_m2_day = flux_g_O2_m2_day * 0.44)
View(flux_stat)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(Vmax = mean(Vmax), KO2 = mean(KO2), flux_O2 = mean(flux_g_O2_m2_day), flux_CO2 = mean(flux_g_CO2_m2_day))
View(flux_dat)
flux_stat <- plot_dat %>% group_by(type, id) %>%
summarise(Vmax = mean(r), KO2 = mean(KO2), time = mean(time), slurry = man_name[1], flux_g_O2_m2_day = mean(flux) * 3600*24*10^-6*32*10000, flux_g_CO2_m2_day = flux_g_O2_m2_day * 1.12)
write.csv(flux_stat, '../output/flux_stat.csv', row.names = F)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(Vmax = mean(Vmax), KO2 = mean(KO2), flux_O2 = mean(flux_g_O2_m2_day), flux_CO2 = mean(flux_g_CO2_m2_day))
View(flux_dat)
flux_stat <- plot_dat %>% group_by(type, id) %>%
summarise(Vmax = mean(r), KO2 = mean(KO2), time = mean(time), slurry = man_name[1], flux_g_O2_m2_day = mean(flux) * 3600*24*10^-6*32*10000, flux_g_CO2_m2_day = flux_g_O2_m2_day * 0.44)
write.csv(flux_stat, '../output/flux_stat.csv', row.names = F)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(Vmax = mean(Vmax), KO2 = mean(KO2), flux_O2 = mean(flux_g_O2_m2_day), flux_CO2 = mean(flux_g_CO2_m2_day))
View(flux_dat)
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(Vmax = mean(Vmax), KO2 = mean(KO2), flux_O2 = mean(flux_g_O2_m2_day), flux_CO2 = mean(flux_g_CO2_m2_day))
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_O2','flux_CO2'), .fns = list(mean = mean, sd = sd))))
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'), .fns = list(mean = mean, sd = sd))))
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv') %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'), .fns = list(mean = mean, sd = sd)))
View(flux_dat)
View(flux_dat)
flux_dat$animal <- 'Pig'
flux_dat$animal[flux_dat$slurry[grepl('Cattle',flux_dat$slurry)], 1] <- 'Cattle'
View(flux_dat)
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv')
flux_dat$animal <- 'Pig'
flux_dat$animal[flux_dat$slurry[grepl('Cattle',flux_dat$slurry)], 1]
flux_dat$animal[flux_dat$slurry[grepl('Cattle',flux_dat$slurry)], ]
flux_dat$animal[grepl('Cattle',flux_dat$slurry),]
flux_dat$animal[grepl('Cattle',flux_dat$slurry),]
grepl('Cattle',flux_dat$slurry)
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv')
flux_dat$animal <- 'Pig'
flux_dat$animal[grepl('Cattle',flux_dat$slurry),] <- 'Cattle'
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv')
flux_dat$animal <- 'Pig'
flux_dat$animal[grepl('Cattle',flux_dat$slurry),] <- 'Cattle'
View(flux_dat)
flux_dat$animal[grepl('Cattle',flux_dat$slurry)] <- 'Cattle'
View(flux_dat)
flux_dat <- flux_dat %>% filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>% group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'), .fns = list(mean = mean, sd = sd)))
flux_dat_summary <- flux_dat %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>%
group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'),
.fns = list(mean = mean, sd = sd)))
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv')
flux_dat$animal <- 'Pig'
flux_dat$animal[grepl('Cattle',flux_dat$slurry)] <- 'Cattle'
flux_dat_summary <- flux_dat %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>%
group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'),
.fns = list(mean = mean, sd = sd)))
View(flux_dat_summary)
flux_dat_mean <- flux_dat %>%
group_by(animal) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'),
.fns = list(mean = mean, sd = sd)))
View(flux_dat_mean)
flux_dat_mean <- flux_dat %>% filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>%
group_by(animal) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'),
.fns = list(mean = mean, sd = sd)))
View(flux_dat_mean)
View(flux_dat_summary)
# Author: Frederik Dalby, 21-06-2023
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(marelac)
library(ReacTran)
library(readxl)
source('cal_functions.R')
dat <- read_excel('../data/O2_profiles_corr.xlsx')
input_dat <- dat %>% mutate(id = as.factor(id)) %>% filter(exclude == 0)
model_dat <- NULL
for(i in unique(input_dat$id)){
dat <- input_dat[input_dat$id == i,] %>% filter(umol > 0)
id <- i
manure <- unique(dat$man_name)
time <- unique(dat$time)
parms <- c(D = 2.2*10^-5, kH = 0.0013/1000*10^6, Cair = max(dat$umol)/1000/1.3)
pars.cal <- log10(data.frame(r = 0.1, KO2 = 0.006))
# run calibration function
cal <- optim(par = pars.cal,
fn = resCalc,
dat = dat,
to = c('umol'),
parms = parms,
method = "Nelder mead",
lower = log10(c(0.0001, 0.0001)),
upper = log10(c(10, 0.1)),
control = list(reltol = 0.01),
hessian = TRUE
)
r <- 10^cal$par
model_dat1 <- c(r , id = id, slurry = manure, time = time, Cair = max(dat$umol)/1000/1.3)
model_dat <- rbind(model_dat, model_dat1)
}
# run calibration function
cal <- optim(par = pars.cal,
fn = resCalc,
dat = dat,
to = c('umol'),
parms = parms,
method = "Nelder-Mead",
lower = log10(c(0.0001, 0.0001)),
upper = log10(c(10, 0.1)),
control = list(reltol = 0.01),
hessian = TRUE
)
model_dat <- NULL
for(i in unique(input_dat$id)){
dat <- input_dat[input_dat$id == i,] %>% filter(umol > 0)
id <- i
manure <- unique(dat$man_name)
time <- unique(dat$time)
parms <- c(D = 2.2*10^-5, kH = 0.0013/1000*10^6, Cair = max(dat$umol)/1000/1.3)
pars.cal <- log10(data.frame(r = 0.1, KO2 = 0.006))
# run calibration function
cal <- optim(par = pars.cal,
fn = resCalc,
dat = dat,
to = c('umol'),
parms = parms,
method = "Nelder-Mead",
lower = log10(c(0.0001, 0.0001)),
upper = log10(c(10, 0.1)),
control = list(reltol = 0.01),
hessian = TRUE
)
r <- 10^cal$par
model_dat1 <- c(r , id = id, slurry = manure, time = time, Cair = max(dat$umol)/1000/1.3)
model_dat <- rbind(model_dat, model_dat1)
}
model_dat <- as.data.frame(model_dat) %>% arrange(slurry, time)
write.csv(model_dat, '../output/optim_pars.csv', row.names = F)
setwd("~/GitHub/ABM/vignettes")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(marelac)
library(ReacTran)
library(readxl)
library(viridis)
source('pde_fun.R')
dat <- read_excel('../data/O2_profiles_corr.xlsx')
setwd("~/GitHub/Manure_surf_resp/scripts")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(marelac)
library(ReacTran)
library(readxl)
library(viridis)
source('pde_fun.R')
dat <- read_excel('../data/O2_profiles_corr.xlsx')
optim_pars <- read.csv('../output/optim_pars.csv')
pars <- cbind(optim_pars, D = 2.2 * 10^-5, kH = 0.0013/1000*10^6)
input_dat <- dat %>% mutate(id = as.factor(id)) %>% filter(exclude == 0, depth < 1000)
plot_dat <- data.frame()
for(i in unique(input_dat$id)){
parms <- pars[pars$id == i,]
dat <- input_dat[input_dat$id == i,] %>% select(-manure, -exclude, -mV) %>% filter(umol > 0) %>%
mutate(r = parms$r, KO2 = parms$KO2, type = "data", flux = pars$D[pars$id == i] * max(abs(diff(umol/1000))/abs(diff(depth/10000))))
x <- max(dat$depth)
model1 <- cbind(pde_fun(parms = parms, x = x), id = i, type = "model", man_name = dat$man_name[1], time = dat$time[1], r = parms$r[1], KO2 = parms$KO2[1]) %>%
rename('umol' = 'O2')
plot_dat <- rbind(plot_dat, model1, dat)
}
fig_profiles <- ggplot(plot_dat, aes(umol, y = depth, group = id, col = time)) +
geom_path(data = subset(plot_dat, type == "data")) +  # Add points for "data" category
scale_y_continuous(trans = "reverse") +
scale_x_continuous(position = "top") +
labs(y = "Depth (µm)", x = expression("Oxygen concentration (µmol"~L^{-1}*")"),
col = "Days") +
facet_wrap(~man_name) +
scale_color_viridis(option = "D")  +
theme_bw()
flux_stat <- plot_dat %>% group_by(type, id) %>%
summarise(Vmax = mean(r), KO2 = mean(KO2), time = mean(time), slurry = man_name[1], flux_g_O2_m2_day = mean(flux) * 3600*24*10^-6*32*10000, flux_g_CO2_m2_day = flux_g_O2_m2_day * 0.44)
write.csv(flux_stat, '../output/flux_stat.csv', row.names = F)
# remove strange profiles, id c(30, 31, 34, 35 ,36, 56, 70, 71)
flux_dat <- read.csv('../output/flux_stat.csv')
flux_dat$animal <- 'Pig'
flux_dat$animal[grepl('Cattle',flux_dat$slurry)] <- 'Cattle'
flux_dat_summary <- flux_dat %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>%
group_by(slurry) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'),
.fns = list(mean = mean, sd = sd)))
flux_dat_mean <- flux_dat %>%
filter(!id %in% c(30, 31, 34, 35 ,36, 56, 70, 71), time > 0.7) %>%
group_by(animal) %>%
summarise(across(c('Vmax', 'KO2','flux_g_O2_m2_day','flux_g_CO2_m2_day'),
.fns = list(mean = mean, sd = sd)))
flux_dat_summary
setwd("~/GitHub/ABM/vignettes")
knitr::opts_chunk$set(fig.width=6, fig.height=4)
options(width = 85)
