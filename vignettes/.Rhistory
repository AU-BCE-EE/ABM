storage_depth = 0.82,
resid_depth = 0.2,
floor_area = 35.2,
area = 27.5518,
empty_int = 35,
temp_C = temp_dat2,
wash_water = 0,
wash_int = NA,
rest_d = 0,
cover = 'none',
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = 1.170719751, qhat_opt = 0.316190792, xa_fresh = 1, yield = 1, alpha_opt = 2.477011426))
grp_pars1 = list(grps = c('m0', 'm1', 'm2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = c(default = 0.0628),
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
ki_H2S_slope = c(default = -0.10623, sr1 = -0.1495),
ki_H2S_int = c(default = 0.93066, sr1 = 1.2938),
ki_H2S_min = c(default = 0.08))
grp_pars2 <- grp_pars1
times1 <- dat.mod$time[!is.na(dat.mod$CH4_emis_rate) & dat.mod$treatment == 'control']
times2 <- dat.mod$time[!is.na(dat.mod$CH4_emis_rate) & dat.mod$treatment == 'acidification']
wthr_pars1 = list(temp_air_C = mean(dat.mod$temp_C[dat.mod$treatment == 'control'], na.rm = T), RH = 71, rain = 0, pres_kpa = 101, rs = 10)
evap_pars1 = list(evap = et(temp_C = wthr_pars1$temp_air_C, pres_kpa = wthr_pars1$pres_kpa, rs = wthr_pars1$rs))                # mm/d
wthr_pars2 = wthr_pars1
evap_pars2 = evap_pars1                # mm/d
mng_pars <- list(mng_pars1 = mng_pars1, mng_pars2 = mng_pars2)
grp_pars <- list(grp_pars1 = grp_pars1, grp_pars2 = grp_pars2)
init_pars <- list(init_pars1 = init_pars1, init_pars2 = init_pars2)
man_pars <- list(man_pars1 = man_pars1, man_pars2 = man_pars2)
wthr_pars <- list(wthr_pars1 = wthr_pars1, wthr_pars2 = wthr_pars2)
evap_pars <- list(evap_pars1 = evap_pars1, evap_pars2 = evap_pars2)
times <- list(times1 = times1, times2 = times2)
dat <- list(dat1 = dat.mod[dat.mod$treatment == 'control',], dat2 = dat.mod[dat.mod$treatment == 'acidification',])
#out1 <- abm(days = max(times1), mng_pars = mng_pars1, man_pars = man_pars1,
#    init_pars = init_pars1, wthr_pars = wthr_pars1, evap_pars = evap_pars1)
out2 <- abm(days = max(times2), mng_pars = mng_pars2, man_pars = man_pars2,
init_pars = init_pars2, wthr_pars = wthr_pars2, evap_pars = evap_pars2)
plot(out2$time, out2$CH4_emis_rate, ylab = "CH4 emission rate (g/d)", xlab = 'Time (days)', ylim = c(-100, 2000))
lines(emis_dat2$time, emis_dat2$CH4_emis_rate, col = "red")
man_pars2$pH <- pH_dat2
#out1 <- abm(days = max(times1), mng_pars = mng_pars1, man_pars = man_pars1,
#    init_pars = init_pars1, wthr_pars = wthr_pars1, evap_pars = evap_pars1)
out2 <- abm(days = max(times2), mng_pars = mng_pars2, man_pars = man_pars2,
init_pars = init_pars2, wthr_pars = wthr_pars2, evap_pars = evap_pars2)
plot(out2$time, out2$CH4_emis_rate, ylab = "CH4 emission rate (g/d)", xlab = 'Time (days)', ylim = c(-100, 2000))
lines(emis_dat2$time, emis_dat2$CH4_emis_rate, col = "red")
rm(list = ls())
# Load R functions
ff <- list.files('../../../R', full.names = TRUE)
for (i in ff) source(i)
# get functions and data
abm_packages()
sourceCpp('../../../src/CTM_cpp.cpp')
# Manure composition from digestibility model and feed composition
# enteric and feed consumption fixed now as 0.24% of gross energy intake.
# wash water fixed
opt_pars <- read.csv('../../../outputs/opt_pars2.csv')
opt_pars_A <- read.csv('../../../outputs/opt_pars_A.csv')
opt_pars_all <- cbind(opt_pars, opt_pars_A)
GE <- 13.85 # MJ pr. kg feed
Ym <- 0.24 # fraction of energy intake to methane
Conv <- 0.05565 # MJ pr. g CH4
dat <- read_excel('../dat/overmeyer_2023.xlsx', sheet = 'dataset')
start_date <- min(dat$date, na.rm = T)
dat.mod <- dat %>% rename('CH4_emis' = `CH4 emis (eg. g/h)`,
'temp_C' = `slurry temp (°C)`,
'slurry_mass_left' = `slurry (m³) left`,
'slurry_mass_right' =`slurry (m³) right`,
'feed_intake' = `feed consumption (kg/day/barn)`,
'pH' = `slurry pH`) %>%
mutate(slurry_mass = (slurry_mass_right + slurry_mass_left) * 1000) %>% # remember to correct for enteric here!
filter(!is.na(treatment)) %>%
mutate(time = as.numeric((date - start_date)/60/60/24 + 1), CH4_emis = CH4_emis * 24) %>%
group_by(time, treatment) %>%
summarise(CH4_emis = mean(CH4_emis, na.rm =T),
temp_C = mean(temp_C, na.rm =T),
slurry_mass = mean(slurry_mass, na.rm = T),
pigs = mean(pigs, na.rm = T),
feed_intake = mean(feed_intake, na.rm = T),
period = mean(period, na.rm = T),
pH = mean(pH, na.rm = T)) %>%
group_by(treatment) %>%
mutate(slurry_mass = approx(time, slurry_mass, time)$y) #
feed_times <- which(!is.na(dat.mod[dat.mod$treatment == 'control',]$feed_intake))
for(i in 1:(length(feed_times)-1)){
div <- feed_times[i+1] - feed_times[i]
corr_feed_intake <- dat.mod[dat.mod$treatment == 'control',]$feed_intake[feed_times[i]]/div
dat.mod[dat.mod$treatment == 'control',]$feed_intake[feed_times[i]:(feed_times[i+1]-1)] <- corr_feed_intake
}
feed_times <- which(!is.na(dat.mod[dat.mod$treatment == 'acidification',]$feed_intake))
for(i in 1:(length(feed_times)-1)){
div <- feed_times[i+1] - feed_times[i]
corr_feed_intake <- dat.mod[dat.mod$treatment == 'acidification',]$feed_intake[feed_times[i]]/div
dat.mod[dat.mod$treatment == 'acidification',]$feed_intake[feed_times[i]:(feed_times[i+1]-1)] <- corr_feed_intake
}
dat.mod <- dat.mod %>% mutate(feed_pig = feed_intake/pigs) %>%
mutate(CH4_ent = feed_pig * GE * Ym/100 / Conv * pigs) %>%
mutate(CH4_emis_rate = CH4_emis - CH4_ent)
#assume same temperature in control as acidification compartment from period1
dat.mod$temp_C[dat.mod$treatment == 'control' & dat.mod$period == 1] <- dat.mod$temp_C[dat.mod$treatment == 'acidification' & dat.mod$period == 1]
dat.mod$name <- 'overmeyer_control'
dat.mod$name[dat.mod$treatment == 'acidification'] <- 'overmeyer_acid'
dat.mod$set_weight <- 1
dat.mod$CH4_A_emis_rate <- dat.mod$CH4_emis_rate
slurry_mass_dat1 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'control'],
slurry_mass = dat.mod$slurry_mass[dat.mod$treatment == 'control'], wash_water = 0)
wash_dates1 <-ymd_hms(c("2020-05-21 00:00:00 UTC", "2020-09-12 00:00:00 UTC",
"2021-04-10 00:00:00 UTC"))
wash_times1 <- wash_dates1 - start_date
slurry_mass_dat1$wash_water[slurry_mass_dat1$time %in% wash_times1] <- 4500
slurry_mass_dat2 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'acidification'],
slurry_mass = dat.mod$slurry_mass[dat.mod$treatment == 'acidification'], wash_water = 0)
wash_dates2 <-ymd_hms(c("2020-05-21 00:00:00 UTC", "2020-09-12 00:00:00 UTC",
"2021-04-10 00:00:00 UTC"))
wash_times2 <- wash_dates2 - start_date
slurry_mass_dat2$wash_water[slurry_mass_dat2$time %in% wash_times2] <- 4500
temp_dat1 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'control'],
temp_C = dat.mod$temp_C[dat.mod$treatment == 'control'])
temp_dat2 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'acidification'],
temp_C = dat.mod$temp_C[dat.mod$treatment == 'acidification'])
emis_dat1 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'control'],
CH4_emis_rate = dat.mod$CH4_emis_rate[dat.mod$treatment == 'control'])
emis_dat2 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'acidification'],
CH4_emis_rate = dat.mod$CH4_emis_rate[dat.mod$treatment == 'acidification'])
pH_dat1 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'control' & !is.na(dat.mod$pH)],
pH = dat.mod$pH[dat.mod$treatment == 'control' & !is.na(dat.mod$pH)])
pH_dat2 <- data.frame(time = dat.mod$time[dat.mod$treatment == 'acidification' & !is.na(dat.mod$pH)],
pH = dat.mod$pH[dat.mod$treatment == 'acidification' & !is.na(dat.mod$pH)])
man_pars1 = list(conc_fresh = data.frame(time = c(0, 35, 36, 77,
105, 145, 146, 192,
307, 347, 348, 402,
463, 503, 504, 552), sulfide = c(0.01, 0.01, 0.01, 0.01,
0.01, 0.01, 0.01, 0.01,
0.01, 0.01, 0.01, 0.01,
0.01, 0.01, 0.01, 0.01),
urea = c(3.6, 3.6, 3.11, 3.11,
3.6, 3.6, 3.11, 3.11,
3.6, 3.6, 3.11, 3.11,
3.6, 3.6, 3.11, 3.11), sulfate = c(0.2, 0.2,0.2,0.2,
0.2, 0.2,0.2,0.2,
0.2, 0.2,0.2,0.2,
0.2, 0.2,0.2,0.2), TAN = c(0, 0,0,0,
0, 0,0,0,
0, 0,0,0,
0, 0,0,0),
starch = c(5.29,5.29,5.41,5.41,
5.29,5.29,5.41,5.41,
5.29,5.29,5.41,5.41,
5.29,5.29,5.41,5.41), VFA = c(1.6,1.6, 1.71,1.71,
1.6,1.6, 1.71,1.71,
1.6,1.6, 1.71,1.71,
1.6,1.6, 1.71,1.71), xa_dead = c(0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0),
CF = c(28.41,28.41, 29.13,29.13,
28.41,28.41, 29.13,29.13,
28.41,28.41, 29.13,29.13,
28.41,28.41, 29.13,29.13), CP = c(21.28,21.28, 19.65,19.65,
21.28,21.28, 19.65,19.65,
21.28,21.28, 19.65,19.65,
21.28,21.28, 19.65,19.65),
RFd = c(26.23, 26.23, 28.99,28.99,
26.23, 26.23, 28.99,28.99,
26.23, 26.23, 28.99,28.99,
26.23, 26.23, 28.99,28.99), iNDF = c(25.1,25.1,9.6,9.6,
25.1,25.1,9.6,9.6,
25.1,25.1,9.6,9.6,
25.1,25.1,9.6,9.6), VSd = 0,
VSd_A = c(44.4, 44.4,44.4,44.4,
44.4, 44.4,44.4,44.4,
44.4, 44.4,44.4,44.4,
44.4, 44.4,44.4,44.4), VSnd_A = c(20, 20,20,20,
20, 20,20,20,
20, 20,20,20,
20, 20,20,20), ash = 0),
pH = pH_dat1, dens = 1000)
man_pars2 <- man_pars1
man_pars2$pH <- pH_dat2
init_pars1 = list(conc_init = man_pars1$conc_fresh*0.001)
init_pars2 = list(conc_init = man_pars2$conc_fresh*0.001)
mng_pars1 = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat1,
storage_depth = 0.82,
resid_depth = 0.2,
floor_area = 35.2,
area = 27.5518,
empty_int = 35,
temp_C = temp_dat1,
wash_water = 0,
wash_int = NA,
rest_d = 0,
cover = 'none',
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = 1.170719751, qhat_opt = 0.316190792, xa_fresh = 1, yield = 1, alpha_opt = 2.477011426))
mng_pars2 = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat2,
storage_depth = 0.82,
resid_depth = 0.2,
floor_area = 35.2,
area = 27.5518,
empty_int = 35,
temp_C = temp_dat2,
wash_water = 0,
wash_int = NA,
rest_d = 0,
cover = 'none',
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = 1.170719751, qhat_opt = 0.316190792, xa_fresh = 1, yield = 1, alpha_opt = 2.477011426))
grp_pars1 = list(grps = c('m0', 'm1', 'm2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = c(default = 0.0628),
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
ki_H2S_slope = c(default = -0.10623, sr1 = -0.1495),
ki_H2S_int = c(default = 0.93066, sr1 = 1.2938),
ki_H2S_min = c(default = 0.08))
grp_pars2 <- grp_pars1
times1 <- dat.mod$time[!is.na(dat.mod$CH4_emis_rate) & dat.mod$treatment == 'control']
times2 <- dat.mod$time[!is.na(dat.mod$CH4_emis_rate) & dat.mod$treatment == 'acidification']
wthr_pars1 = list(temp_air_C = mean(dat.mod$temp_C[dat.mod$treatment == 'control'], na.rm = T), RH = 71, rain = 0, pres_kpa = 101, rs = 10)
evap_pars1 = list(evap = et(temp_C = wthr_pars1$temp_air_C, pres_kpa = wthr_pars1$pres_kpa, rs = wthr_pars1$rs))                # mm/d
wthr_pars2 = wthr_pars1
evap_pars2 = evap_pars1                # mm/d
mean(emis_dat1$CH4_emis_rate, na.rm = T) * 365
mean(dat.mod$pigs, na.rm = T)
mean(emis_dat1$CH4_emis_rate, na.rm = T) * 365 /
mean(dat.mod$pigs[dat.mod$treatment == 'control'], na.rm = T)
mean(emis_dat1$CH4_emis_rate, na.rm = T) /
mean(dat.mod$pigs[dat.mod$treatment == 'control'], na.rm = T)
setwd("~/GitHub/PIGMET/data/metemis/scripts")
opt_pars <- read.csv('../../../outputs/opt_pars2.csv')
opt_pars_A <- read.csv('../../../outputs/opt_pars_A.csv')
opt_pars_all <- cbind(opt_pars, opt_pars_A)
GE <- 16.04 # MJ pr. kg feed. have to measure this!!
Ym <- 0.24 # fraction of energy intake to methane
Conv <- 0.05565 # MJ pr. g CH4
# get functions and data
dat <- read.csv('../sorted_dat/sorted_dat.csv')
slurry_dat <- read.csv('../sorted_dat/slurry_dat.csv')
slurry_dat$datetime <- as.POSIXct(ifelse(nchar(slurry_dat$datetime) == 10, paste0(slurry_dat$datetime, " 00:00:00"), slurry_dat$datetime), format = "%Y-%m-%d %H:%M:%OS")
# section 5 (MPVPosition 1)
slurry_dat_1 <- slurry_dat[slurry_dat$MPVPosition == 1,]
slurry_dat_1$time <- as.numeric((slurry_dat_1$datetime - min(slurry_dat_1$datetime, na.rm = T)) /60/60/24)
# slurry mass start defines initiation of the batch and simulation
dat_1 <- dat[dat$MPVPosition == 1 & dat$datetime >= min(slurry_dat_1$datetime),]
dat_1$time <- dat_1$days - min(dat_1$days, na.rm = T)
# add number of pigs, feed, and calc enteric emission
dat_1 <- merge(dat_1, slurry_dat_1[, c('time', 'pigs','feed','mass')], all = TRUE) %>%
mutate(pigs = approx(time[!is.na(pigs)], pigs[!is.na(pigs)], xout = time)$y,
feed = approx(time[!is.na(feed)], feed[!is.na(feed)], xout = time)$y,
slurry_mass = mass) %>%
mutate(CH4_emis_ent = feed * GE * Ym/100 / Conv * pigs) %>%
mutate(CH4_emis_rate = CH4_emis - CH4_emis_ent, VFA_conc = 2)
dat_1$VFA_conc[3] <- 10
dat_1$name <- 'metemis_section5'
dat_1$set_weight <- 1
dat_1$CH4_A_emis_rate <- dat_1$CH4_emis_rate
# slurry_mass and temp df
slurry_mass_dat1 <- data.frame(time = c(slurry_dat_1$time[!is.na(slurry_dat_1$mass)]), slurry_mass = c(slurry_dat_1$mass[!is.na(slurry_dat_1$mass)]))
temp_dat1 <- data.frame(time = dat_1$time[!is.na(dat_1$temp)], temp_C = dat_1$temp[!is.na(dat_1$temp)])
# section 6 (MPVPosition 3)
slurry_dat_2 <- slurry_dat[slurry_dat$MPVPosition == 3,]
slurry_dat_2$time <- as.numeric((slurry_dat_2$datetime - min(slurry_dat_2$datetime, na.rm = T)) /60/60/24)
# slurry mass start defines initiation of the batch and simulation
dat_2 <- dat[dat$MPVPosition == 3 & dat$datetime >= min(slurry_dat_2$datetime),]
dat_2$time <- dat_2$days - min(dat_2$days, na.rm = T)
# add number of pigs, feed, and calc enteric emission
dat_2 <- merge(dat_2, slurry_dat_2[, c('time', 'pigs','feed','mass')], all = TRUE) %>%
mutate(pigs = approx(time[!is.na(pigs)], pigs[!is.na(pigs)], xout = time)$y,
feed = approx(time[!is.na(feed)], feed[!is.na(feed)], xout = time)$y,
slurry_mass = mass) %>%
mutate(CH4_emis_ent = feed * GE * Ym/100 / Conv * pigs) %>%
mutate(CH4_emis_rate = CH4_emis - CH4_emis_ent, VFA_conc = 2)
dat_2$VFA_conc[3] <- 10
dat_2$name <- 'metemis_section6'
dat_2$set_weight <- 1
dat_2$CH4_A_emis_rate <- dat_2$CH4_emis_rate
# slurry_mass and temp df
slurry_mass_dat2 <- data.frame(time = c(slurry_dat_2$time[!is.na(slurry_dat_2$mass)]), slurry_mass = c(slurry_dat_2$mass[!is.na(slurry_dat_2$mass)]))
temp_dat2 <- data.frame(time = dat_2$time[!is.na(dat_2$temp)], temp_C = dat_2$temp[!is.na(dat_2$temp)])
# common pars
pH_dat1 <- data.frame(time = c(0, 22,   50, 64, 73, 78, 113, 141, 155, 156, 225, 255, 281),
pH = c(7,   6.99, 7.33,7.53,7.53,7,7.27,7.53,7.3, 7,7.15,7,7.19))
man_pars1 =
list(conc_fresh =
data.frame(
time = c(0, 73, 74, 155, 156, 281), sulfide = c(0.01, 0.01, 0.01, 0.01, 0.01, 0.01),
urea = c(3.19, 3.19, 3.19, 3.19, 3.19, 3.19), sulfate = c(0.2, 0.2, 0.2, 0.2, 0.2, 0.2),
TAN = c(0,0,0,0,0,0), starch = c(4.99, 4.99, 4.99, 4.99, 4.99, 4.99),
VFA = c(2.35, 2.35, 2.42, 2.42, 2.96, 2.96), xa_dead = c(0,0,0,0,0,0),
CF = c(26.93,26.93,26.93,26.93,26.93,26.93), CP = c(15.48, 15.48, 17.16, 17.16, 17.91, 17.91),
RFd = c(23.18, 23.18, 22.85, 22.85, 23.18, 23.18), iNDF = c(10.6, 10.6, 10.6, 10.6, 10.6, 10.6),
VSd_A = c(30.25, 30.25, 36, 36, 33.5, 33.5), VSnd_A = c(12.97, 12.97, 15.4, 15.4, 14.4, 14.4), ash = 15, VSd = 0),
pH = pH_dat1, dens = 1000)
pH_dat2 = data.frame(time = c(0, 26,54,68,76,95,117,145,159,174,208,236,250,285),
pH = c(7, 7.47,7.37,7.56,7.56,7,7.38,7.55,7.39,7,7.02,7.04,7.52,7.52))
man_pars2 =
list(conc_fresh =
data.frame(
time = c(0, 76, 77, 159, 160, 285), sulfide = c(0.01, 0.01, 0.01, 0.01, 0.01, 0.01),
urea = c(3.19, 3.19, 3.19, 3.19, 3.19, 3.19), sulfate = c(0.2, 0.2, 0.2, 0.2, 0.2, 0.2),
TAN = c(0,0,0,0,0,0), starch = c(4.99, 4.99, 4.99, 4.99, 4.99, 4.99),
VFA = c(2.42, 2.42, 2.43, 2.43, 2.59, 2.59), xa_dead = c(0,0,0,0,0,0),
CF = c(26.93,26.93,26.93,26.93,26.93,26.93), CP = c(13.2, 13.2, 16.5, 16.5, 17.3, 17.3),
RFd = c(23.18, 23.18, 22.85, 22.85, 23.18, 23.18), iNDF = c(10.6, 10.6, 10.6, 10.6, 10.6, 10.6),
VSd_A = c(30.76, 30.76, 35.5, 35.5, 34.7, 34.7), VSnd_A = c(13.2, 13.2, 15.2, 15.2, 14.9, 14.9),
ash = 15, VSd = 0),
pH = pH_dat2, dens = 1000)
wthr_pars1 = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10)
evap_pars1 = list(evap = 0.5 * et(temp_C = wthr_pars1$temp_air_C,
pres_kpa = wthr_pars1$pres_kpa, rs = wthr_pars1$rs))                # mm/d
wthr_pars2 <- wthr_pars1
evap_pars2 <- evap_pars1
# section 5 pars
mng_pars1 = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat1,
storage_depth = 0.5,
resid_depth = 0,
floor_area = 11,
area = 199.6296,
empty_int = 35,
temp_C = temp_dat1,
wash_water = 0,
wash_int = NA,
rest_d = 0,
cover = NA,
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = 1.170719751, qhat_opt = 0.316190792,
xa_fresh = 1, yield = 1, alpha_opt = 2.477011426))
# run spin-up simulation
spinup1 <- abm(days = max(dat_1$time), 1, wthr_pars = wthr_pars1, evap_pars = evap_pars1,
mng_pars = mng_pars1, man_pars = man_pars1)
mean(dat_1$CH4_emis_rate, na.rm = T)/mean(dat_1$pigs, na.rm = T)
mean(dat_2$CH4_emis_rate, na.rm = T)/mean(dat_2$pigs, na.rm = T)
setwd("~/GitHub/Manure_surf_resp/scripts")
# surface respiration estimate
rm(list = ls())
library("readxl")
library('ggplot2')
library('tidyr')
library('dplyr')
library('gridExtra')
#prep
dat.org <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "all"))
dat.info <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
dat.info.f <- dat.info %>% select(c('reactor', 'temp','gas','datetime','day', 'wet_weight', 'dm','vs','lig','cel','hem','lip','tan','tn','vfa','pH')) %>%
mutate(dm = dm * 10, vs = vs * dm)
mass <- dat.info.f$wet_weight[dat.info.f$day == 0]/1000 # kg
mass <- mass[!is.na(mass)]
dat.org <- dat.org[dat.org$reactor != 'bg',]
dat.org$mass <- mass
f_CH4 <- 1/1000000 * dat.org$cor_flow/(0.082057 * 293) * 60 * 24 * 16 *1000 / dat.org$mass # mg pr. kg slurry pr day
f_CO2 <- 1/1000000 * dat.org$cor_flow/(0.082057 * 293) * 60 * 24 * 44 *1000 / dat.org$mass # mg pr. kg slurry pr day
CO2_bg <- 430
CH4_bg <- 2
surf_area <- (9.5/2)^2 * pi / 10000# m^2
ifelse(dat.org$gas == "air", dat.org$CO2_emis <- (as.numeric(dat.org$co2) - CO2_bg) * f_CO2, dat.org$CO2_emis <- dat.org$co2 * f_CO2)
ifelse(dat.org$gas == "air", dat.org$CH4_emis <- (as.numeric(dat.org$ch4) - CH4_bg) * f_CH4, dat.org$CH4_emis <- dat.org$ch4 * f_CH4)
surf_conv <- mean(mass/surf_area) # convert mg / kg slurry / day to mg / m2 / day
dat.mod <- dat.org %>% group_by(temp, gas, day, date) %>%
mutate(ratio = (CH4_emis * 12.01/16.04)/(CH4_emis * 12.01/16.04 + CO2_emis * 12.01/44.01)) %>%
group_by(temp, gas, day, date) %>% summarise(across(c('CO2_emis','CH4_emis','ratio'), .fns = list(mean = mean, sd = sd), na.rm = TRUE))
dat.mod$CO2_surf_emis_mean <- 0
dat.mod$CO2_surf_emis_mean[dat.mod$temp == 10 & dat.mod$gas == 'air'] <- dat.mod$CO2_emis_mean[dat.mod$temp == 10 & dat.mod$gas == 'air'] - dat.mod$CO2_emis_mean[dat.mod$temp == 10 & dat.mod$gas == 'n2']
dat.mod$CO2_surf_emis_mean[dat.mod$temp == 20 & dat.mod$gas == 'air'] <- dat.mod$CO2_emis_mean[dat.mod$temp == 20 & dat.mod$gas == 'air'] - dat.mod$CO2_emis_mean[dat.mod$temp == 20 & dat.mod$gas == 'n2']
dat.mod$CO2_surf_emis_sd <- 0
dat.mod$CO2_surf_emis_sd[dat.mod$temp == 10 & dat.mod$gas == 'air'] <- sqrt((dat.mod$CO2_emis_sd[dat.mod$temp == 10 & dat.mod$gas == 'air'])^2 - (dat.mod$CO2_emis_sd[dat.mod$temp == 10 & dat.mod$gas == 'n2'])^2)
dat.mod$CO2_surf_emis_sd[dat.mod$temp == 20 & dat.mod$gas == 'air'] <- sqrt((dat.mod$CO2_emis_sd[dat.mod$temp == 20 & dat.mod$gas == 'air'])^2 + (dat.mod$CO2_emis_sd[dat.mod$temp == 20 & dat.mod$gas == 'n2'])^2)
dat.mod$CO2_surf_emis_mean <- dat.mod$CO2_surf_emis_mean /1000 * surf_conv
dat.mod$CO2_surf_emis_sd <- dat.mod$CO2_surf_emis_sd /1000 * surf_conv
dat.mod.long <- dat.mod %>% pivot_longer(cols = c('CH4_emis_mean', 'CO2_emis_mean', 'CH4_emis_sd', 'CO2_emis_sd'), names_to = 'comp', values_to = 'value')
dat.mod.mean <- dat.mod.long[grepl('mean$', dat.mod.long$comp),]
dat.mod.sd <- dat.mod.long[grepl('sd$', dat.mod.long$comp),]
dat.mod.both <- cbind(dat.mod.mean, sd = dat.mod.sd$value)
dat.mod.both$temp <- as.factor(dat.mod.both$temp)
# plot emission rates
new.lab <- as_labeller(c(air = "Air", n2 = "N[2]", CH4_emis_mean = "CH[4]", CO2_emis_mean = "CO[2]"), label_parsed)
fig_emis <- ggplot(dat.mod.both, aes(x = day, y = value, col = temp)) +
geom_point() +
geom_errorbar(aes(ymin = value - sd, ymax = value + sd)) +
facet_grid(comp~gas, labeller = new.lab, scales = "free_y") +
theme_bw() +
theme(text = element_text(size = 10)) +
theme(legend.position = 'top', axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = expression('Emission rate (mg kg'[~slurry]^{-1}~'day'^{-1}*')'), x = "", col = expression('Temp (\u00b0C)'))
# plot surf respiration, but excluded from figure for now.
dat.mod.long <- dat.mod %>% pivot_longer(cols = c('CO2_surf_emis_mean', 'CO2_surf_emis_sd'), names_to = 'comp', values_to = 'value')
dat.mod.mean <- dat.mod.long[grepl('mean$', dat.mod.long$comp),]
dat.mod.sd <- dat.mod.long[grepl('sd$', dat.mod.long$comp),]
dat.mod.both <- cbind(dat.mod.mean, sd = dat.mod.sd$value)
dat.mod.both$temp <- as.factor(dat.mod.both$temp)
new.lab <- as_labeller(c(air = "Air", n2 = "N[2]", CO2_surf_emis_mean = "CO[2]-surface"), label_parsed)
fig_surf <- ggplot(dat.mod.both, aes(x = day, y = value, col = temp)) +
geom_point() +
geom_errorbar(aes(ymin = value - sd, ymax = value + sd)) +
facet_grid(comp~gas, labeller = new.lab, scales = "free_y") +
scale_x_continuous(breaks = seq(0, 250, by = 50)) +
theme_bw() +
theme(text = element_text(size = 10)) +
theme(legend.position = 'none') +
labs(y = expression('Emission rate (g m'^{-2}~'day'^{-1}*')'), x = "Days", col = expression('Temp (\u00b0C)'))
# plot ratios
dat.mod.long <- dat.mod %>% pivot_longer(cols = c('ratio_mean', 'ratio_sd'), names_to = 'comp', values_to = 'value')
dat.mod.mean <- dat.mod.long[grepl('mean$', dat.mod.long$comp),]
View(dat.mod.mean)
dat.mod.sd <- dat.mod.long[grepl('sd$', dat.mod.long$comp),]
dat.mod.both <- cbind(dat.mod.mean, sd = dat.mod.sd$value)
dat.mod.both$temp <- as.factor(dat.mod.both$temp)
new.lab <- as_labeller(c(air = "Air", n2 = "N[2]", ratio_mean = "C[CH4]/(C[CH4]+C[CO2])"), label_parsed)
fig_ratio <- ggplot(dat.mod.both, aes(x = day, y = value, col = temp)) +
geom_point() +
geom_errorbar(aes(ymin = value - sd, ymax = value + sd)) +
facet_grid(comp~gas, labeller = new.lab, scales = "free_y") +
scale_x_continuous(breaks = seq(0, 250, by = 50)) +
theme_bw() +
theme(text = element_text(size = 10)) +
theme(legend.position = 'none') +
labs(y = expression('Molar ratio (CH'[4]*'/(CH'[4]*'+CO'[2]*')'), x = "Days", col = expression('Temp (\u00b0C)'))
dat.mod.both$value
View(dat.mod.both)
mean_ratios <- dat.mod.both %>% group_by(temp, gas) %>% summarise(mean_ratio = mean(value))
View(mean_ratios)
View(mean_ratios)
setwd("~/GitHub/ABM/vignettes")
knitr::opts_chunk$set(fig.width=6, fig.height=4)
options(width = 85)
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE)
library(ABM)
ff <- list.files('../R', full.names = TRUE)
for (i in ff) source(i)
out0 <- abm(365) # run the simulation for 365 days
line_colors <- c('red', 'blue', 'green')
matplot(out0$time, out0[, nn <- c('m0','m1','m2')]/1000,
type = 'l', lty = c(1:length(nn)), col = line_colors, xlab = 'Time (d)', ylab = 'Microbial biomass (kg)')
legend("topright", legend = nn, lty = c(1:length(nn)), col = line_colors, lwd = 1,
title = "Microbial biomass", cex = 0.8)
matplot(out0$time, out0[, nn <- c('CH4_emis_rate', 'CO2_emis_rate', 'NH3_emis_rate')]/1000,
type = 'l', lty = c(1:length(nn)), col = line_colors, xlab = 'Time (d)', ylab = 'Emission rate (kg/day)')
legend("topright", legend = nn, lty = c(1:length(nn)), col = line_colors, lwd = 1,
title = "Emission rates", cex = 0.8)
pigs <- 1000
CH4_kg_pr_pig_pr_year <- max(out0$CH4_emis_cum)/1000/pigs
CH4_kg_pr_pig_pr_year
CO2_kg_pr_pig_pr_year <- max(out0$CO2_emis_cum)/1000/pigs
CO2_kg_pr_pig_pr_year
NH3_kg_pr_pig_pr_year <- max(out0$NH3_emis_cum)/1000/out0$area[1]
NH3_kg_pr_pig_pr_year
C_ratio <- (CH4_kg_pr_pig_pr_year * 12/16) / (CO2_kg_pr_pig_pr_year * 12/44 + CH4_kg_pr_pig_pr_year * 12/16)
C_ratio
slurry_mass_intp <- approx(out0$time, out0$slurry_mass_eff, xout = out0$time)$y
View(out0)
slurry_mass_intp <- approx(out0$time, out0$slurry_mass_eff, xout = out0$time)$y
slurry_mass_cum <- cumsum(slurry_mass_intp)
slurry_mass_dat <- data.frame(time = out0$time, slurry_mass = slurry_mass_cum)
slurry_mass_dat
VSd_fresh <- mean(out0$VSd_eff_conc, na.rm = T)
VSd_fresh
temp_dat <- read.csv('../dat/outside_slurry_temp.csv', sep = ';')
temp_dat
out$slurry_mass_eff
out0$slurry_mass_eff
# fix this.
dim(out0)
out0 <- out0[!duplicated(out0$time), ]
# fix this.
dim(out0)
slurry_mass_intp <- approx(out0$time, out0$slurry_mass_eff, xout = out0$time)$y
slurry_mass_intp
slurry_mass_cum <- cumsum(slurry_mass_intp)
slurry_mass_cum
rm(list = ls())
library(dplyr)
library(tidyr)
library(lubridate)
library(readxl)
library(purrr)
library(gridExtra)
library(ggplot2)
ff <- list.files('../R', full.names = TRUE)
for (i in ff) source(i)
# get functions and data
abm_packages()
sourceCpp('../src/CTM_cpp.cpp')
source("res_funs.R")
